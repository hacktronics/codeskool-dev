'use strict';function a0_0x5171(_0x203f5a,_0x563880){const _0x411d8a=a0_0x411d();return a0_0x5171=function(_0x51715c,_0x1a7145){_0x51715c=_0x51715c-0x128;let _0xb9fb97=_0x411d8a[_0x51715c];return _0xb9fb97;},a0_0x5171(_0x203f5a,_0x563880);}const a0_0x3514a7=a0_0x5171;(function(_0x461952,_0xd9446b){const _0x4cfad6=a0_0x5171,_0x306508=_0x461952();while(!![]){try{const _0x351b13=parseInt(_0x4cfad6(0x142))/0x1*(-parseInt(_0x4cfad6(0x148))/0x2)+parseInt(_0x4cfad6(0x144))/0x3+-parseInt(_0x4cfad6(0x13d))/0x4+parseInt(_0x4cfad6(0x12c))/0x5*(parseInt(_0x4cfad6(0x13e))/0x6)+-parseInt(_0x4cfad6(0x146))/0x7+-parseInt(_0x4cfad6(0x13a))/0x8+parseInt(_0x4cfad6(0x143))/0x9;if(_0x351b13===_0xd9446b)break;else _0x306508['push'](_0x306508['shift']());}catch(_0x14abfc){_0x306508['push'](_0x306508['shift']());}}}(a0_0x411d,0x2e9a7));function a0_0x411d(){const _0x4d5f6b=['ESP_RAM_BLOCK','BLE','EFUSE_BASE','3185jNwYBN','CHIP_NAME','UARTDEV_BUF_NO_USB','getChipDescription','SPI_USR2_OFFS','IEEE802.15.4','FLASH_SIZES','webpackChunkGUI','UARTDEV_BUF_NO','_d2h','UART_DATE_REG_ADDR','MAC_EFUSE_REG','SPI_MOSI_DLEN_OFFS','IMAGE_CHIP_ID','2516016NXxPpQ','SPI_MISO_DLEN_OFFS','push','504436LLpSfv','948weXGLG','SPI_REG_BASE','UART_CLKDIV_MASK','getChipFeatures','249026KJjDyI','7145082popiWq','847437AyRjtL','SPI_W0_OFFS','2075493awgFQm','In\x20_post_connect\x20','2VLwSGS','readReg','postConnect','USB_RAM_BLOCK','readMac','getEraseSize'];a0_0x411d=function(){return _0x4d5f6b;};return a0_0x411d();}(self[a0_0x3514a7(0x133)]=self[a0_0x3514a7(0x133)]||[])[a0_0x3514a7(0x13c)]([[0x15d],{0x14595:(_0x509df2,_0x2de30e,_0x5b6cd6)=>{const _0x260b8b=a0_0x3514a7;_0x5b6cd6['d'](_0x2de30e,{'ESP32H2ROM':()=>_0x5ef515});var _0x320c3a=_0x5b6cd6(0x14428);class _0x5ef515 extends _0x320c3a['n']{constructor(){const _0x4f228e=a0_0x5171;super(...arguments),this['CHIP_NAME']='ESP32-H2',this[_0x4f228e(0x139)]=0x10,this['EFUSE_BASE']=0x60008800,this['MAC_EFUSE_REG']=this[_0x4f228e(0x12b)]+0x44,this['UART_CLKDIV_REG']=0x3ff40014,this[_0x4f228e(0x140)]=0xfffff,this[_0x4f228e(0x136)]=0x6000007c,this['FLASH_WRITE_SIZE']=0x400,this['BOOTLOADER_FLASH_OFFSET']=0x0,this[_0x4f228e(0x132)]={'1MB':0x0,'2MB':0x10,'4MB':0x20,'8MB':0x30,'16MB':0x40},this[_0x4f228e(0x13f)]=0x60002000,this['SPI_USR_OFFS']=0x18,this['SPI_USR1_OFFS']=0x1c,this[_0x4f228e(0x130)]=0x20,this[_0x4f228e(0x138)]=0x24,this[_0x4f228e(0x13b)]=0x28,this[_0x4f228e(0x145)]=0x58,this[_0x4f228e(0x14b)]=0x800,this[_0x4f228e(0x12e)]=0x3,this[_0x4f228e(0x134)]=0x3fcef14c;}async[_0x260b8b(0x12f)](_0x1cbd9){const _0x2562b2=_0x260b8b;return this[_0x2562b2(0x12d)];}async[_0x260b8b(0x141)](_0x1783a3){const _0x22bda7=_0x260b8b;return[_0x22bda7(0x12a),_0x22bda7(0x131)];}async['getCrystalFreq'](_0x996259){return 0x20;}[_0x260b8b(0x135)](_0x352fb2){const _0x5460b5=(+_0x352fb2)['toString'](0x10);return 0x1===_0x5460b5['length']?'0'+_0x5460b5:_0x5460b5;}async[_0x260b8b(0x14a)](_0x12fb55){const _0x1db45f=_0x260b8b,_0x41933c=0xff&await _0x12fb55[_0x1db45f(0x149)](this[_0x1db45f(0x134)]);_0x12fb55['debug'](_0x1db45f(0x147)+_0x41933c),_0x41933c==this[_0x1db45f(0x12e)]&&(_0x12fb55[_0x1db45f(0x129)]=this[_0x1db45f(0x14b)]);}async[_0x260b8b(0x14c)](_0x5e4e5a){const _0xa72e91=_0x260b8b;let _0x12446a=await _0x5e4e5a[_0xa72e91(0x149)](this[_0xa72e91(0x137)]);_0x12446a>>>=0x0;let _0x3056e0=await _0x5e4e5a[_0xa72e91(0x149)](this[_0xa72e91(0x137)]+0x4);_0x3056e0=_0x3056e0>>>0x0&0xffff;const _0x192509=new Uint8Array(0x6);return _0x192509[0x0]=_0x3056e0>>0x8&0xff,_0x192509[0x1]=0xff&_0x3056e0,_0x192509[0x2]=_0x12446a>>0x18&0xff,_0x192509[0x3]=_0x12446a>>0x10&0xff,_0x192509[0x4]=_0x12446a>>0x8&0xff,_0x192509[0x5]=0xff&_0x12446a,this[_0xa72e91(0x135)](_0x192509[0x0])+':'+this[_0xa72e91(0x135)](_0x192509[0x1])+':'+this[_0xa72e91(0x135)](_0x192509[0x2])+':'+this[_0xa72e91(0x135)](_0x192509[0x3])+':'+this[_0xa72e91(0x135)](_0x192509[0x4])+':'+this[_0xa72e91(0x135)](_0x192509[0x5]);}['getEraseSize'](_0x4f355f,_0x36e67b){return _0x36e67b;}}},0x14428:(_0x22387b,_0x4b23f9,_0x503642)=>{const _0x29e7dd=a0_0x3514a7;_0x503642['d'](_0x4b23f9,{'n':()=>_0x16a588});class _0x16a588{[_0x29e7dd(0x128)](_0x16e735,_0x35ffe2){return _0x35ffe2;}}}}]);