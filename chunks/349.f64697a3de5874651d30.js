'use strict';const a0_0x2a75bf=a0_0x3cf9;function a0_0x1a7e(){const _0xe79cab=['SPI_MISO_DLEN_OFFS','postConnect','IEEE802.15.4','push','ESP_RAM_BLOCK','9mbKTrt','CHIP_NAME','USB_RAM_BLOCK','5942sWJrYR','UARTDEV_BUF_NO','UART_CLKDIV_REG','20tkIpys','debug','SPI_USR1_OFFS','toString','1sxiHxI','getChipDescription','BLE','readMac','1563328gJDKmw','SPI_USR_OFFS','_d2h','SPI_USR2_OFFS','1085121AFZuAX','2846470MTUctM','EFUSE_BASE','UARTDEV_BUF_NO_USB','BOOTLOADER_FLASH_OFFSET','711718tPMDRR','FLASH_WRITE_SIZE','getEraseSize','455460ytVBPC','SPI_W0_OFFS','FLASH_SIZES','readReg','In\x20_post_connect\x20','UART_CLKDIV_MASK','930912CLcSMf','MAC_EFUSE_REG','UART_DATE_REG_ADDR','webpackChunkGUI','10Bcxdfw'];a0_0x1a7e=function(){return _0xe79cab;};return a0_0x1a7e();}(function(_0x15d3a1,_0x582fdf){const _0x14df24=a0_0x3cf9,_0xb996b3=_0x15d3a1();while(!![]){try{const _0x98b94a=parseInt(_0x14df24(0xbb))/0x1*(parseInt(_0x14df24(0xb4))/0x2)+-parseInt(_0x14df24(0xb1))/0x3*(parseInt(_0x14df24(0xcb))/0x4)+-parseInt(_0x14df24(0xab))/0x5*(-parseInt(_0x14df24(0xa7))/0x6)+-parseInt(_0x14df24(0xc8))/0x7+-parseInt(_0x14df24(0xbf))/0x8+parseInt(_0x14df24(0xc3))/0x9*(parseInt(_0x14df24(0xb7))/0xa)+parseInt(_0x14df24(0xc4))/0xb;if(_0x98b94a===_0x582fdf)break;else _0xb996b3['push'](_0xb996b3['shift']());}catch(_0x154bb0){_0xb996b3['push'](_0xb996b3['shift']());}}}(a0_0x1a7e,0x2a9a2));function a0_0x3cf9(_0x58eecb,_0x24aad2){const _0x1a7ec4=a0_0x1a7e();return a0_0x3cf9=function(_0x3cf9ef,_0x5ac1f5){_0x3cf9ef=_0x3cf9ef-0xa4;let _0x22c637=_0x1a7ec4[_0x3cf9ef];return _0x22c637;},a0_0x3cf9(_0x58eecb,_0x24aad2);}(self[a0_0x2a75bf(0xaa)]=self[a0_0x2a75bf(0xaa)]||[])[a0_0x2a75bf(0xaf)]([[0x15d],{0x14595:(_0x14ca49,_0x14f22e,_0x8204a9)=>{const _0x1a93eb=a0_0x2a75bf;_0x8204a9['d'](_0x14f22e,{'ESP32H2ROM':()=>_0x7330bd});var _0x11696d=_0x8204a9(0x14428);class _0x7330bd extends _0x11696d['n']{constructor(){const _0x49e094=a0_0x3cf9;super(...arguments),this['CHIP_NAME']='ESP32-H2',this['IMAGE_CHIP_ID']=0x10,this[_0x49e094(0xc5)]=0x60008800,this['MAC_EFUSE_REG']=this[_0x49e094(0xc5)]+0x44,this[_0x49e094(0xb6)]=0x3ff40014,this[_0x49e094(0xa6)]=0xfffff,this[_0x49e094(0xa9)]=0x6000007c,this[_0x49e094(0xc9)]=0x400,this[_0x49e094(0xc7)]=0x0,this[_0x49e094(0xcd)]={'1MB':0x0,'2MB':0x10,'4MB':0x20,'8MB':0x30,'16MB':0x40},this['SPI_REG_BASE']=0x60002000,this[_0x49e094(0xc0)]=0x18,this[_0x49e094(0xb9)]=0x1c,this[_0x49e094(0xc2)]=0x20,this['SPI_MOSI_DLEN_OFFS']=0x24,this[_0x49e094(0xac)]=0x28,this[_0x49e094(0xcc)]=0x58,this[_0x49e094(0xb3)]=0x800,this[_0x49e094(0xc6)]=0x3,this[_0x49e094(0xb5)]=0x3fcef14c;}async[_0x1a93eb(0xbc)](_0x3d8853){const _0x5c9697=_0x1a93eb;return this[_0x5c9697(0xb2)];}async['getChipFeatures'](_0x4ab81f){const _0x5a127b=_0x1a93eb;return[_0x5a127b(0xbd),_0x5a127b(0xae)];}async['getCrystalFreq'](_0x16d9f7){return 0x20;}[_0x1a93eb(0xc1)](_0x313ff3){const _0x508493=_0x1a93eb,_0x4f2089=(+_0x313ff3)[_0x508493(0xba)](0x10);return 0x1===_0x4f2089['length']?'0'+_0x4f2089:_0x4f2089;}async[_0x1a93eb(0xad)](_0x3c0131){const _0x36fb5d=_0x1a93eb,_0xa25270=0xff&await _0x3c0131[_0x36fb5d(0xa4)](this[_0x36fb5d(0xb5)]);_0x3c0131[_0x36fb5d(0xb8)](_0x36fb5d(0xa5)+_0xa25270),_0xa25270==this[_0x36fb5d(0xc6)]&&(_0x3c0131[_0x36fb5d(0xb0)]=this[_0x36fb5d(0xb3)]);}async[_0x1a93eb(0xbe)](_0x36e43f){const _0x24a5f1=_0x1a93eb;let _0x5a7532=await _0x36e43f[_0x24a5f1(0xa4)](this['MAC_EFUSE_REG']);_0x5a7532>>>=0x0;let _0x150735=await _0x36e43f['readReg'](this[_0x24a5f1(0xa8)]+0x4);_0x150735=_0x150735>>>0x0&0xffff;const _0x10fc54=new Uint8Array(0x6);return _0x10fc54[0x0]=_0x150735>>0x8&0xff,_0x10fc54[0x1]=0xff&_0x150735,_0x10fc54[0x2]=_0x5a7532>>0x18&0xff,_0x10fc54[0x3]=_0x5a7532>>0x10&0xff,_0x10fc54[0x4]=_0x5a7532>>0x8&0xff,_0x10fc54[0x5]=0xff&_0x5a7532,this['_d2h'](_0x10fc54[0x0])+':'+this[_0x24a5f1(0xc1)](_0x10fc54[0x1])+':'+this[_0x24a5f1(0xc1)](_0x10fc54[0x2])+':'+this[_0x24a5f1(0xc1)](_0x10fc54[0x3])+':'+this[_0x24a5f1(0xc1)](_0x10fc54[0x4])+':'+this[_0x24a5f1(0xc1)](_0x10fc54[0x5]);}[_0x1a93eb(0xca)](_0x526743,_0x653f10){return _0x653f10;}}},0x14428:(_0x53880,_0x49fa10,_0x58ddeb)=>{const _0x45419d=a0_0x2a75bf;_0x58ddeb['d'](_0x49fa10,{'n':()=>_0x585e48});class _0x585e48{[_0x45419d(0xca)](_0x2baed0,_0x4ecbc1){return _0x4ecbc1;}}}}]);